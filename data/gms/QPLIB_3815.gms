$offlisting
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*         65       65        0        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        193        1      192        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        385      193      192        0
*
*  Solve m using MIQCP minimizing objvar;


Variables  objvar,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18
          ,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35
          ,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52
          ,b53,b54,b55,b56,b57,b58,b59,b60,b61,b62,b63,b64,b65,b66,b67,b68,b69
          ,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86
          ,b87,b88,b89,b90,b91,b92,b93,b94,b95,b96,b97,b98,b99,b100,b101,b102
          ,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b115
          ,b116,b117,b118,b119,b120,b121,b122,b123,b124,b125,b126,b127,b128
          ,b129,b130,b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141
          ,b142,b143,b144,b145,b146,b147,b148,b149,b150,b151,b152,b153,b154
          ,b155,b156,b157,b158,b159,b160,b161,b162,b163,b164,b165,b166,b167
          ,b168,b169,b170,b171,b172,b173,b174,b175,b176,b177,b178,b179,b180
          ,b181,b182,b183,b184,b185,b186,b187,b188,b189,b190,b191,b192,b193;

Binary Variables  b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18
          ,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35
          ,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52
          ,b53,b54,b55,b56,b57,b58,b59,b60,b61,b62,b63,b64,b65,b66,b67,b68,b69
          ,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86
          ,b87,b88,b89,b90,b91,b92,b93,b94,b95,b96,b97,b98,b99,b100,b101,b102
          ,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b115
          ,b116,b117,b118,b119,b120,b121,b122,b123,b124,b125,b126,b127,b128
          ,b129,b130,b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141
          ,b142,b143,b144,b145,b146,b147,b148,b149,b150,b151,b152,b153,b154
          ,b155,b156,b157,b158,b159,b160,b161,b162,b163,b164,b165,b166,b167
          ,b168,b169,b170,b171,b172,b173,b174,b175,b176,b177,b178,b179,b180
          ,b181,b182,b183,b184,b185,b186,b187,b188,b189,b190,b191,b192,b193;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36
          ,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53
          ,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65;


e1.. b2*b4 - b2*b3 - b2*b5 - b2*b6 + b2*b7 - b2*b8 + b3*b9 + b3*b10 + b3*b11 + 
     b3*b12 - b3*b13 - b4*b9 + b4*b14 + b4*b15 + b4*b16 + b4*b17 + b5*b10 - b5*
     b14 - b5*b18 + b5*b19 + b5*b20 - b6*b11 - b6*b15 + b6*b18 - b6*b21 - b6*
     b22 + b7*b12 + b7*b16 - b7*b19 + b7*b21 + b7*b23 + b8*b13 - b8*b17 - b8*
     b20 + b8*b22 + b8*b23 + b9*b24 - b9*b25 - b9*b26 - b9*b27 + b10*b24 + b10*
     b28 + b10*b29 - b10*b30 - b11*b25 + b11*b28 - b11*b31 + b11*b32 + b12*b26
      - b12*b29 - b12*b31 + b12*b33 - b13*b27 - b13*b30 - b13*b32 + b13*b33 - 
     b14*b24 - b14*b34 - b14*b35 - b14*b36 + b15*b25 + b15*b34 + b15*b37 - b15*
     b38 + b16*b26 - b16*b35 + b16*b37 - b16*b39 - b17*b27 + b17*b36 - b17*b38
      + b17*b39 + b18*b28 + b18*b34 + b18*b40 + b18*b41 - b19*b29 - b19*b35 + 
     b19*b40 - b19*b42 + b20*b30 + b20*b36 - b20*b41 - b20*b42 - b21*b31 - b21*
     b37 + b21*b40 - b21*b43 - b22*b32 + b22*b38 + b22*b41 + b22*b43 - b23*b33
      - b23*b39 - b23*b42 - b23*b43 + b24*b44 + b24*b45 + b24*b46 + b25*b44 + 
     b25*b47 + b25*b48 - b26*b45 + b26*b47 + b26*b49 - b27*b46 - b27*b48 - b27*
     b49 + b28*b44 - b28*b50 + b28*b51 - b29*b45 - b29*b50 - b29*b52 + b30*b46
      + b30*b51 + b30*b52 - b31*b47 + b31*b50 + b31*b53 + b32*b48 + b32*b51 + 
     b32*b53 - b33*b49 + b33*b52 + b33*b53 - b34*b44 - b34*b54 + b34*b55 + b35*
     b45 - b35*b54 + b35*b56 + b36*b46 - b36*b55 - b36*b56 - b37*b47 + b37*b54
      - b37*b57 + b38*b48 - b38*b55 + b38*b57 - b39*b49 - b39*b56 - b39*b57 - 
     b40*b50 + b40*b54 - b40*b58 - b41*b51 + b41*b55 - b41*b58 - b42*b52 - b42*
     b56 + b42*b58 - b43*b53 + b43*b57 + b43*b58 - b44*b59 + b44*b60 + b45*b59
      + b45*b61 - b46*b60 + b46*b61 + b47*b59 - b47*b62 - b48*b60 + b48*b62 + 
     b49*b61 - b49*b62 + b50*b59 - b50*b63 - b51*b60 - b51*b63 - b52*b61 + b52*
     b63 + b53*b62 - b53*b63 - b54*b59 - b54*b64 + b55*b60 - b55*b64 - b56*b61
      + b56*b64 - b57*b62 - b57*b64 - b58*b63 + b58*b64 - b59*b65 - b60*b65 + 
     b61*b65 + b62*b65 + b63*b65 - b64*b65 - b66*b67 + b66*b68 - b66*b69 - b66*
     b70 + b66*b71 - b66*b72 + b67*b73 + b67*b74 + b67*b75 + b67*b76 - b67*b77
      - b68*b73 + b68*b78 + b68*b79 + b68*b80 + b68*b81 + b69*b74 - b69*b78 - 
     b69*b82 + b69*b83 + b69*b84 - b70*b75 - b70*b79 + b70*b82 - b70*b85 - b70*
     b86 + b71*b76 + b71*b80 - b71*b83 + b71*b85 + b71*b87 + b72*b77 - b72*b81
      - b72*b84 + b72*b86 + b72*b87 + b73*b88 - b73*b89 - b73*b90 - b73*b91 + 
     b74*b88 + b74*b92 + b74*b93 - b74*b94 - b75*b89 + b75*b92 - b75*b95 + b75*
     b96 + b76*b90 - b76*b93 - b76*b95 + b76*b97 - b77*b91 - b77*b94 - b77*b96
      + b77*b97 - b78*b88 - b78*b98 - b78*b99 - b78*b100 + b79*b89 + b79*b98 + 
     b79*b101 - b79*b102 + b80*b90 - b80*b99 + b80*b101 - b80*b103 - b81*b91 + 
     b81*b100 - b81*b102 + b81*b103 + b82*b92 + b82*b98 + b82*b104 + b82*b105
      - b83*b93 - b83*b99 + b83*b104 - b83*b106 + b84*b94 + b84*b100 - b84*b105
      - b84*b106 - b85*b95 - b85*b101 + b85*b104 - b85*b107 - b86*b96 + b86*
     b102 + b86*b105 + b86*b107 - b87*b97 - b87*b103 - b87*b106 - b87*b107 + 
     b88*b108 + b88*b109 + b88*b110 + b89*b108 + b89*b111 + b89*b112 - b90*b109
      + b90*b111 + b90*b113 - b91*b110 - b91*b112 - b91*b113 + b92*b108 - b92*
     b114 + b92*b115 - b93*b109 - b93*b114 - b93*b116 + b94*b110 + b94*b115 + 
     b94*b116 - b95*b111 + b95*b114 + b95*b117 + b96*b112 + b96*b115 + b96*b117
      - b97*b113 + b97*b116 + b97*b117 - b98*b108 - b98*b118 + b98*b119 + b99*
     b109 - b99*b118 + b99*b120 + b100*b110 - b100*b119 - b100*b120 - b101*b111
      + b101*b118 - b101*b121 + b102*b112 - b102*b119 + b102*b121 - b103*b113
      - b103*b120 - b103*b121 - b104*b114 + b104*b118 - b104*b122 - b105*b115
      + b105*b119 - b105*b122 - b106*b116 - b106*b120 + b106*b122 - b107*b117
      + b107*b121 + b107*b122 - b108*b123 + b108*b124 + b109*b123 + b109*b125
      - b110*b124 + b110*b125 + b111*b123 - b111*b126 - b112*b124 + b112*b126
      + b113*b125 - b113*b126 + b114*b123 - b114*b127 - b115*b124 - b115*b127
      - b116*b125 + b116*b127 + b117*b126 - b117*b127 - b118*b123 - b118*b128
      + b119*b124 - b119*b128 - b120*b125 + b120*b128 - b121*b126 - b121*b128
      - b122*b127 + b122*b128 - b123*b129 - b124*b129 + b125*b129 + b126*b129
      + b127*b129 - b128*b129 - b130*b131 + b130*b132 - b130*b133 - b130*b134
      + b130*b135 - b130*b136 + b131*b137 + b131*b138 + b131*b139 + b131*b140
      - b131*b141 - b132*b137 + b132*b142 + b132*b143 + b132*b144 + b132*b145
      + b133*b138 - b133*b142 - b133*b146 + b133*b147 + b133*b148 - b134*b139
      - b134*b143 + b134*b146 - b134*b149 - b134*b150 + b135*b140 + b135*b144
      - b135*b147 + b135*b149 + b135*b151 + b136*b141 - b136*b145 - b136*b148
      + b136*b150 + b136*b151 + b137*b152 - b137*b153 - b137*b154 - b137*b155
      + b138*b152 + b138*b156 + b138*b157 - b138*b158 - b139*b153 + b139*b156
      - b139*b159 + b139*b160 + b140*b154 - b140*b157 - b140*b159 + b140*b161
      - b141*b155 - b141*b158 - b141*b160 + b141*b161 - b142*b152 - b142*b162
      - b142*b163 - b142*b164 + b143*b153 + b143*b162 + b143*b165 - b143*b166
      + b144*b154 - b144*b163 + b144*b165 - b144*b167 - b145*b155 + b145*b164
      - b145*b166 + b145*b167 + b146*b156 + b146*b162 + b146*b168 + b146*b169
      - b147*b157 - b147*b163 + b147*b168 - b147*b170 + b148*b158 + b148*b164
      - b148*b169 - b148*b170 - b149*b159 - b149*b165 + b149*b168 - b149*b171
      - b150*b160 + b150*b166 + b150*b169 + b150*b171 - b151*b161 - b151*b167
      - b151*b170 - b151*b171 + b152*b172 + b152*b173 + b152*b174 + b153*b172
      + b153*b175 + b153*b176 - b154*b173 + b154*b175 + b154*b177 - b155*b174
      - b155*b176 - b155*b177 + b156*b172 - b156*b178 + b156*b179 - b157*b173
      - b157*b178 - b157*b180 + b158*b174 + b158*b179 + b158*b180 - b159*b175
      + b159*b178 + b159*b181 + b160*b176 + b160*b179 + b160*b181 - b161*b177
      + b161*b180 + b161*b181 - b162*b172 - b162*b182 + b162*b183 + b163*b173
      - b163*b182 + b163*b184 + b164*b174 - b164*b183 - b164*b184 - b165*b175
      + b165*b182 - b165*b185 + b166*b176 - b166*b183 + b166*b185 - b167*b177
      - b167*b184 - b167*b185 - b168*b178 + b168*b182 - b168*b186 - b169*b179
      + b169*b183 - b169*b186 - b170*b180 - b170*b184 + b170*b186 - b171*b181
      + b171*b185 + b171*b186 - b172*b187 + b172*b188 + b173*b187 + b173*b189
      - b174*b188 + b174*b189 + b175*b187 - b175*b190 - b176*b188 + b176*b190
      + b177*b189 - b177*b190 + b178*b187 - b178*b191 - b179*b188 - b179*b191
      - b180*b189 + b180*b191 + b181*b190 - b181*b191 - b182*b187 - b182*b192
      + b183*b188 - b183*b192 - b184*b189 + b184*b192 - b185*b190 - b185*b192
      - b186*b191 + b186*b192 - b187*b193 - b188*b193 + b189*b193 + b190*b193
      + b191*b193 - b192*b193 - objvar =E= 0;

e2..    b2 + b66 + b130 =E= 1;

e3..    b3 + b67 + b131 =E= 1;

e4..    b9 + b73 + b137 =E= 1;

e5..    b4 + b68 + b132 =E= 1;

e6..    b5 + b69 + b133 =E= 1;

e7..    b10 + b74 + b138 =E= 1;

e8..    b24 + b88 + b152 =E= 1;

e9..    b14 + b78 + b142 =E= 1;

e10..    b18 + b82 + b146 =E= 1;

e11..    b28 + b92 + b156 =E= 1;

e12..    b44 + b108 + b172 =E= 1;

e13..    b34 + b98 + b162 =E= 1;

e14..    b6 + b70 + b134 =E= 1;

e15..    b11 + b75 + b139 =E= 1;

e16..    b25 + b89 + b153 =E= 1;

e17..    b15 + b79 + b143 =E= 1;

e18..    b7 + b71 + b135 =E= 1;

e19..    b12 + b76 + b140 =E= 1;

e20..    b26 + b90 + b154 =E= 1;

e21..    b16 + b80 + b144 =E= 1;

e22..    b19 + b83 + b147 =E= 1;

e23..    b29 + b93 + b157 =E= 1;

e24..    b45 + b109 + b173 =E= 1;

e25..    b35 + b99 + b163 =E= 1;

e26..    b40 + b104 + b168 =E= 1;

e27..    b50 + b114 + b178 =E= 1;

e28..    b59 + b123 + b187 =E= 1;

e29..    b54 + b118 + b182 =E= 1;

e30..    b21 + b85 + b149 =E= 1;

e31..    b31 + b95 + b159 =E= 1;

e32..    b47 + b111 + b175 =E= 1;

e33..    b37 + b101 + b165 =E= 1;

e34..    b23 + b87 + b151 =E= 1;

e35..    b33 + b97 + b161 =E= 1;

e36..    b49 + b113 + b177 =E= 1;

e37..    b39 + b103 + b167 =E= 1;

e38..    b42 + b106 + b170 =E= 1;

e39..    b52 + b116 + b180 =E= 1;

e40..    b61 + b125 + b189 =E= 1;

e41..    b56 + b120 + b184 =E= 1;

e42..    b58 + b122 + b186 =E= 1;

e43..    b63 + b127 + b191 =E= 1;

e44..    b65 + b129 + b193 =E= 1;

e45..    b64 + b128 + b192 =E= 1;

e46..    b43 + b107 + b171 =E= 1;

e47..    b53 + b117 + b181 =E= 1;

e48..    b62 + b126 + b190 =E= 1;

e49..    b57 + b121 + b185 =E= 1;

e50..    b8 + b72 + b136 =E= 1;

e51..    b13 + b77 + b141 =E= 1;

e52..    b27 + b91 + b155 =E= 1;

e53..    b17 + b81 + b145 =E= 1;

e54..    b20 + b84 + b148 =E= 1;

e55..    b30 + b94 + b158 =E= 1;

e56..    b46 + b110 + b174 =E= 1;

e57..    b36 + b100 + b164 =E= 1;

e58..    b41 + b105 + b169 =E= 1;

e59..    b51 + b115 + b179 =E= 1;

e60..    b60 + b124 + b188 =E= 1;

e61..    b55 + b119 + b183 =E= 1;

e62..    b22 + b86 + b150 =E= 1;

e63..    b32 + b96 + b160 =E= 1;

e64..    b48 + b112 + b176 =E= 1;

e65..    b38 + b102 + b166 =E= 1;

Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

m.tolproj = 0.0;
$if not set MIQCP $set MIQCP MIQCP
Solve m using %MIQCP% minimizing objvar;
