$offlisting
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*          1        1        0        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*        232        1      231        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        232        1      231        0
*
*  Solve m using MIQCP maximizing objvar;


Variables  objvar,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18
          ,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35
          ,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52
          ,b53,b54,b55,b56,b57,b58,b59,b60,b61,b62,b63,b64,b65,b66,b67,b68,b69
          ,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86
          ,b87,b88,b89,b90,b91,b92,b93,b94,b95,b96,b97,b98,b99,b100,b101,b102
          ,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b115
          ,b116,b117,b118,b119,b120,b121,b122,b123,b124,b125,b126,b127,b128
          ,b129,b130,b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141
          ,b142,b143,b144,b145,b146,b147,b148,b149,b150,b151,b152,b153,b154
          ,b155,b156,b157,b158,b159,b160,b161,b162,b163,b164,b165,b166,b167
          ,b168,b169,b170,b171,b172,b173,b174,b175,b176,b177,b178,b179,b180
          ,b181,b182,b183,b184,b185,b186,b187,b188,b189,b190,b191,b192,b193
          ,b194,b195,b196,b197,b198,b199,b200,b201,b202,b203,b204,b205,b206
          ,b207,b208,b209,b210,b211,b212,b213,b214,b215,b216,b217,b218,b219
          ,b220,b221,b222,b223,b224,b225,b226,b227,b228,b229,b230,b231,b232;

Binary Variables  b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18
          ,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35
          ,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52
          ,b53,b54,b55,b56,b57,b58,b59,b60,b61,b62,b63,b64,b65,b66,b67,b68,b69
          ,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86
          ,b87,b88,b89,b90,b91,b92,b93,b94,b95,b96,b97,b98,b99,b100,b101,b102
          ,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b115
          ,b116,b117,b118,b119,b120,b121,b122,b123,b124,b125,b126,b127,b128
          ,b129,b130,b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141
          ,b142,b143,b144,b145,b146,b147,b148,b149,b150,b151,b152,b153,b154
          ,b155,b156,b157,b158,b159,b160,b161,b162,b163,b164,b165,b166,b167
          ,b168,b169,b170,b171,b172,b173,b174,b175,b176,b177,b178,b179,b180
          ,b181,b182,b183,b184,b185,b186,b187,b188,b189,b190,b191,b192,b193
          ,b194,b195,b196,b197,b198,b199,b200,b201,b202,b203,b204,b205,b206
          ,b207,b208,b209,b210,b211,b212,b213,b214,b215,b216,b217,b218,b219
          ,b220,b221,b222,b223,b224,b225,b226,b227,b228,b229,b230,b231,b232;

Equations  e1;


e1.. 2*b2*b3 - 2*b2*b29 + 2*b2*b89 + 2*b89 - 2*b2*b98 + 4*b98 - 2*b3*b96 + 2*
     b96 - 2*b3*b97 + 4*b97 + 2*b3*b188 - 2*b188 - 2*b4*b131 + 2*b131 + 2*b4*
     b152 - 2*b152 + 2*b4*b175 + 2*b175 - 2*b4*b193 + 2*b193 + 2*b5*b6 - 2*b5*
     b71 + 2*b71 + 2*b5*b202 + 2*b202 - 2*b5*b203 + 4*b203 - 2*b6*b14 - 2*b6*
     b72 + 2*b72 + 2*b6*b230 + 2*b230 + 2*b7*b8 + 2*b7*b37 - 2*b7*b120 + 2*b120
      - 2*b7*b141 + 2*b141 + 2*b8*b36 - 2*b8*b74 + 2*b74 - 2*b8*b76 + 2*b76 - 2
     *b9*b18 + 2*b9*b71 - 2*b9*b199 + 2*b199 + 2*b9*b225 - 2*b225 + 2*b10*b11
      - 2*b10*b12 + 2*b10*b31 - 2*b10*b122 + 2*b122 - 2*b11*b73 + 2*b73 - 2*b11
     *b74 + 2*b11*b162 + 2*b162 + 2*b12*b40 + 2*b12*b41 - 2*b12*b78 + 4*b78 - 2
     *b13*b23 + 2*b13*b144 - 2*b144 - 2*b13*b164 + 2*b164 + 2*b13*b183 - 2*b183
      + 2*b14*b24 - 2*b14*b152 + 2*b14*b228 + 2*b228 + 2*b15*b20 - 2*b15*b75 + 
     2*b75 - 2*b15*b107 + 4*b107 + 2*b15*b138 - 2*b138 - 2*b16*b108 + 2*b108 - 
     2*b16*b142 + 2*b142 + 2*b16*b166 - 4*b166 + 2*b16*b210 - 2*b210 - 2*b17*
     b144 + 2*b17*b146 + 2*b146 + 2*b17*b166 - 2*b17*b169 + 4*b169 + 2*b18*b43
      + 2*b18*b177 + 2*b177 - 2*b18*b224 + 4*b224 - 2*b19*b73 + 2*b19*b139 + 2*
     b139 - 2*b20*b73 + 2*b20*b182 + 2*b182 - 2*b20*b209 + 4*b209 + 2*b21*b45
      + 2*b21*b87 + 2*b87 - 2*b21*b123 + 2*b123 - 2*b21*b182 - 2*b22*b23 + 2*
     b22*b33 + 2*b22*b186 - 4*b186 - 2*b22*b189 + 4*b189 + 2*b23*b51 + 2*b23*
     b125 - 2*b125 + 2*b24*b130 + 2*b130 - 2*b24*b151 + 4*b151 - 2*b24*b197 + 2
     *b197 - 2*b25*b74 + 2*b25*b119 + 2*b119 + 2*b26*b41 - 2*b26*b142 - 2*b26*
     b162 + 2*b26*b210 + 2*b27*b48 - 2*b27*b209 - 2*b27*b210 + 2*b27*b211 + 2*
     b211 - 2*b28*b108 + 2*b28*b168 - 2*b168 + 2*b28*b214 - 2*b214 - 2*b28*b217
      + 4*b217 + 2*b29*b34 - 2*b29*b148 + 4*b148 + 2*b29*b168 - 2*b30*b36 - 2*
     b30*b164 + 2*b30*b183 + 2*b30*b208 - 2*b208 - 2*b31*b161 + 2*b161 - 2*b31*
     b183 + 2*b31*b184 + 2*b184 - 2*b32*b61 + 2*b32*b96 + 2*b32*b183 - 2*b32*
     b184 - 2*b33*b77 + 2*b77 - 2*b33*b125 + 2*b33*b170 + 2*b170 - 2*b34*b77 + 
     2*b34*b85 + 2*b85 - 2*b34*b91 + 4*b91 + 2*b35*b59 - 2*b35*b112 + 4*b112 - 
     2*b35*b174 + 4*b174 + 2*b35*b225 + 2*b36*b64 - 2*b36*b140 + 2*b140 - 2*b37
     *b48 + 2*b37*b53 - 2*b37*b164 - 2*b38*b53 - 2*b38*b65 + 2*b38*b164 + 2*b38
     *b214 + 2*b39*b56 - 2*b39*b101 + 4*b101 - 2*b39*b150 + 4*b150 + 2*b39*b195
      - 2*b195 - 2*b40*b63 + 2*b40*b205 - 2*b205 - 2*b40*b207 + 4*b207 - 2*b41*
     b107 - 2*b41*b122 + 2*b42*b80 + 2*b80 - 2*b42*b89 + 2*b42*b125 - 2*b42*
     b187 + 2*b187 - 2*b43*b47 - 2*b43*b128 + 4*b128 + 2*b43*b196 + 2*b196 + 2*
     b44*b50 - 2*b44*b86 + 2*b86 + 2*b44*b103 + 2*b103 - 2*b44*b115 + 4*b115 + 
     2*b45*b121 + 2*b121 - 2*b45*b141 - 2*b45*b207 + 2*b46*b82 + 2*b82 - 2*b46*
     b84 + 4*b84 + 2*b46*b145 - 2*b145 - 2*b46*b167 + 2*b167 - 2*b47*b83 + 2*
     b83 + 2*b47*b220 + 2*b220 + 2*b47*b223 - 2*b223 + 2*b48*b140 - 2*b48*b181
      + 4*b181 + 2*b49*b52 - 2*b49*b102 + 4*b102 + 2*b49*b104 + 2*b104 - 2*b49*
     b116 + 4*b116 - 2*b50*b104 - 2*b51*b97 + 2*b51*b143 - 2*b143 - 2*b51*b184
      + 2*b52*b55 - 2*b52*b92 + 2*b92 - 2*b52*b113 + 2*b113 + 2*b53*b88 + 2*b88
      - 2*b53*b163 + 4*b163 + 2*b54*b171 + 2*b171 + 2*b54*b216 - 2*b216 - 2*b54
     *b217 - 2*b54*b219 + 2*b219 + 2*b55*b56 - 2*b55*b102 - 2*b55*b196 - 2*b56*
     b176 + 4*b176 - 2*b56*b177 + 2*b57*b109 - 2*b109 + 2*b57*b212 - 2*b212 - 2
     *b57*b213 + 2*b213 - 2*b57*b215 + 2*b215 + 2*b58*b70 + 2*b58*b127 + 2*b127
      - 2*b58*b190 + 2*b190 - 2*b58*b218 + 2*b218 + 2*b59*b113 - 2*b59*b151 - 2
     *b59*b153 + 2*b153 + 2*b60*b124 - 2*b124 + 2*b60*b208 - 2*b60*b209 - 2*b60
     *b211 + 2*b61*b125 + 2*b61*b185 - 2*b185 - 2*b61*b187 + 2*b62*b63 + 2*b62*
     b138 - 2*b62*b140 - 2*b62*b160 + 2*b160 + 2*b64*b143 - 2*b64*b182 - 2*b64*
     b184 + 2*b65*b145 + 2*b65*b165 - 2*b165 - 2*b65*b167 + 2*b66*b67 + 2*b66*
     b159 - 2*b159 - 2*b66*b160 - 2*b66*b181 - 2*b67*b206 + 2*b206 + 2*b68*b69
      - 2*b68*b179 + 2*b179 + 2*b69*b229 + 2*b229 - 2*b69*b230 - 2*b69*b232 + 2
     *b232 + 2*b70*b193 - 2*b70*b219 - 2*b70*b222 + 4*b222 - 2*b71*b72 - 2*b71*
     b155 + 2*b155 - 2*b72*b132 + 4*b132 + 2*b72*b195 + 2*b73*b159 + 2*b74*b180
      - 2*b180 - 2*b75*b78 - 2*b76*b106 + 2*b106 - 2*b76*b120 + 2*b76*b205 - 2*
     b77*b90 + 2*b90 + 2*b77*b188 - 2*b78*b118 + 2*b118 - 2*b78*b120 - 2*b79*
     b90 + 2*b79 - 2*b79*b99 + 4*b99 - 2*b79*b146 + 2*b79*b216 - 2*b80*b99 - 2*
     b80*b110 + 4*b110 - 2*b80*b169 - 2*b81*b93 + 2*b81 + 2*b93 - 2*b81*b203 - 
     2*b82*b110 - 2*b82*b126 + 4*b126 - 2*b82*b189 + 2*b83*b90 - 2*b83*b101 - 2
     *b83*b110 - 2*b84*b126 - 2*b84*b147 + 4*b147 - 2*b84*b217 - 2*b85*b101 - 2
     *b85*b112 - 2*b85*b126 - 2*b86*b116 - 2*b87*b88 - 2*b87*b95 + 2*b95 - 2*
     b87*b163 - 2*b88*b96 - 2*b88*b108 - 2*b89*b147 - 2*b89*b171 - 2*b90*b100
      + 4*b100 - 2*b91*b112 - 2*b91*b128 - 2*b91*b147 + 2*b92*b93 - 2*b92*b114
      + 4*b114 - 2*b92*b136 + 4*b136 - 2*b93*b94 + 2*b94 - 2*b93*b135 + 4*b135
      - 2*b94*b136 - 2*b95*b97 - 2*b95*b123 + 2*b95*b186 - 2*b96*b98 - 2*b97*
     b98 - 2*b98*b188 - 2*b99*b111 + 2*b111 - 2*b99*b220 - 2*b100*b128 - 2*b100
     *b150 - 2*b100*b171 - 2*b101*b129 + 4*b129 - 2*b102*b103 - 2*b102*b133 + 2
     *b133 - 2*b103*b134 + 4*b134 - 2*b103*b157 + 4*b157 - 2*b104*b105 + 2*b105
      - 2*b104*b156 + 4*b156 - 2*b105*b157 - 2*b106*b119 - 2*b107*b119 - 2*b107
     *b161 + 2*b108*b109 - 2*b109*b168 + 2*b109*b216 - 2*b110*b127 - 2*b111*
     b150 - 2*b111*b174 + 2*b111*b219 - 2*b112*b223 - 2*b113*b114 - 2*b113*b226
      + 2*b226 - 2*b114*b115 - 2*b114*b153 - 2*b115*b154 + 4*b154 - 2*b115*b179
      - 2*b116*b117 + 2*b117 - 2*b116*b229 - 2*b117*b179 - 2*b118*b139 - 2*b119
     *b121 + 2*b120*b208 - 2*b121*b139 - 2*b121*b208 - 2*b122*b123 + 2*b122*
     b124 + 2*b123*b185 - 2*b124*b185 + 2*b124*b212 - 2*b126*b149 + 2*b149 - 2*
     b127*b174 - 2*b127*b192 + 4*b192 - 2*b128*b130 - 2*b129*b131 - 2*b129*b132
      - 2*b129*b222 - 2*b130*b132 - 2*b130*b192 + 2*b131*b133 - 2*b131*b197 - 2
     *b132*b133 - 2*b133*b134 - 2*b134*b135 - 2*b134*b177 - 2*b135*b178 + 4*
     b178 - 2*b135*b202 - 2*b136*b137 + 2*b137 - 2*b136*b201 + 2*b201 - 2*b137*
     b202 - 2*b139*b140 - 2*b141*b142 + 2*b141*b143 + 2*b142*b165 - 2*b143*b165
      + 2*b144*b145 + 2*b144*b212 - 2*b145*b146 - 2*b146*b170 - 2*b147*b173 + 4
     *b173 - 2*b148*b170 - 2*b148*b173 - 2*b148*b220 + 2*b149*b172 + 2*b172 - 2
     *b149*b192 - 2*b149*b221 + 4*b221 - 2*b150*b151 - 2*b151*b221 + 2*b152*
     b153 + 2*b152*b223 - 2*b153*b154 - 2*b154*b156 - 2*b154*b198 + 2*b198 + 2*
     b155*b179 - 2*b155*b199 - 2*b155*b231 + 4*b231 - 2*b156*b200 + 2*b200 - 2*
     b156*b231 - 2*b157*b158 + 2*b158 - 2*b157*b230 - 2*b158*b231 + 2*b160*b161
      - 2*b160*b162 - 2*b161*b163 - 2*b162*b163 + 2*b165*b186 + 2*b166*b167 + 2
     *b166*b185 - 2*b167*b169 + 2*b168*b190 - 2*b169*b190 - 2*b170*b172 - 2*
     b171*b191 + 4*b191 - 2*b172*b190 - 2*b172*b191 - 2*b173*b175 - 2*b173*b221
      - 2*b174*b176 - 2*b175*b176 - 2*b175*b191 - 2*b176*b225 - 2*b177*b178 - 2
     *b178*b227 + 2*b227 - 2*b178*b229 + 2*b180*b206 - 2*b181*b182 - 2*b181*
     b206 + 2*b186*b187 - 2*b187*b189 + 2*b188*b218 - 2*b189*b218 - 2*b191*b193
      - 2*b192*b194 + 4*b194 - 2*b193*b194 - 2*b194*b195 - 2*b194*b196 + 2*b195
     *b198 - 2*b196*b198 - 2*b197*b199 + 2*b197*b200 - 2*b198*b200 + 2*b199*
     b201 - 2*b200*b201 - 2*b201*b203 - 2*b202*b204 + 2*b204 - 2*b203*b204 - 2*
     b206*b207 - 2*b207*b209 + 2*b210*b213 - 2*b211*b212 - 2*b211*b213 - 2*b213
     *b214 + 2*b214*b215 - 2*b215*b216 - 2*b215*b217 - 2*b218*b219 - 2*b220*
     b222 - 2*b221*b224 - 2*b222*b224 + 2*b223*b226 - 2*b224*b226 + 2*b225*b227
      - 2*b226*b227 - 2*b227*b228 - 2*b228*b229 - 2*b228*b230 - 2*b231*b232
      - objvar =E= 0;

Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

m.tolproj = 0.0;
$if not set MIQCP $set MIQCP MIQCP
Solve m using %MIQCP% maximizing objvar;
